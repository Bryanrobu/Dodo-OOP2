#BlueJ class context
comment0.target=MyDodo
comment0.text=\r\n\r\n\ @author\ Sjaak\ Smetsers\ &\ Renske\ Smetsers-Weeda\r\n\ @version\ 3.1\ --\ 29-07-2017\r\n
comment1.params=
comment1.target=MyDodo()
comment10.params=
comment10.target=void\ faceEast()
comment10.text=\r\n\ Faces\ east\r\n
comment11.params=
comment11.target=void\ faceNorth()
comment11.text=\r\n\ Faces\ north\r\n
comment12.params=
comment12.target=void\ faceSouth()
comment12.text=\r\n\ Faces\ south\r\n
comment13.params=
comment13.target=void\ faceWest()
comment13.text=\r\n\ Faces\ west\r\n
comment14.params=
comment14.target=void\ turnRandomly()
comment14.text=\r\n\ Faces\ a\ random\ direction\ \r\n
comment15.params=
comment15.target=void\ moveRandomly()
comment15.text=\r\n\ Moves\ around\ randomly\ while\ counting\ down\ steps\ and\ picking\ up\ eggs\r\n
comment16.params=closestEgg\ score\ myNrOfStepsTaken
comment16.target=int\ goToEgg(Egg,\ int,\ int)
comment16.text=\r\n\ Goes\ to\ a\ specefic\ egg\r\n\ \r\n\ @param\:\ Egg\ item,\ score,\ steps\ taken\r\n\ \r\n\ @return\:\ int\ ofnew\ steps\ taken\r\n
comment17.params=listOfEggs
comment17.target=Egg\ findClosestEgg(java.util.List)
comment17.text=\r\n\ Finds\ the\ closest\ egg\ to\ the\ dodo\ and\ measuring\ if\ its\ worth\ going\ to\ a\r\n\ golden\ egg\ or\ not\r\n\ \r\n\ @param\:\ list\ of\ eggs\r\n\ \r\n\ @return\:\ item\ of\ egg\r\n
comment18.params=
comment18.target=void\ dodoRace()
comment18.text=\r\n\ Finds\ the\ ideal\ path\ to\ all\ the\ eggs,\ counting\ steps\ along\ the\ way\ and\ updating\ the\r\n\ scoreboard\r\n
comment2.params=
comment2.target=void\ act()
comment2.text=METHODS\ OF\ THE\ CLASS\:
comment3.params=
comment3.target=void\ move()
comment3.text=\r\n\ Move\ one\ cell\ forward\ in\ the\ current\ direction.\r\n\ \r\n\ <P>\ Initial\:\ Dodo\ is\ somewhere\ in\ the\ world\r\n\ <P>\ Final\:\ If\ possible,\ Dodo\ has\ moved\ forward\ one\ cell\r\n\r\n
comment4.params=
comment4.target=boolean\ canMove()
comment4.text=\r\n\ Test\ if\ Dodo\ can\ move\ forward,\ \r\n\ i.e.\ there\ are\ no\ obstructions\ or\ end\ of\ world\ in\ the\ cell\ in\ front\ of\ her.\r\n\ \r\n\ <p>\ Initial\:\ \ \ Dodo\ is\ somewhere\ in\ the\ world\r\n\ <p>\ Final\:\ \ \ \ \ Same\ as\ initial\ situation\r\n\ \r\n\ @return\ \ boolean\ true\ if\ Dodo\ can\ move\ (thus,\ no\ obstructions\ ahead)\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ false\ if\ Dodo\ can't\ move\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ there\ is\ an\ obstruction\ or\ end\ of\ world\ ahead\r\n
comment5.params=distance
comment5.target=void\ jump(int)
comment5.text=\r\n\ Move\ given\ number\ of\ cells\ forward\ in\ the\ current\ direction.\r\n\ \r\n\ <p>\ Initial\:\ \ \ \r\n\ <p>\ Final\:\ \ \r\n\ \r\n\ @param\ \ \ int\ distance\:\ the\ number\ of\ steps\ made\r\n
comment6.params=
comment6.target=java.util.List\ getListOfEggsInWorld()
comment6.text=\r\n\ Places\ all\ the\ Egg\ objects\ in\ the\ world\ in\ a\ list.\r\n\ \r\n\ @return\ List\ of\ Egg\ objects\ in\ the\ world\r\n
comment7.params=
comment7.target=java.util.List\ createListOfNumbers()
comment8.params=
comment8.target=void\ practiceWithLists()
comment8.text=\r\n\ Method\ for\ praciticing\ with\ lists.\r\n
comment9.params=
comment9.target=void\ practiceWithListsOfSurpriseEgss()
numComments=19
